---
version: '3'

# In order to set configuration, please use a .env file in
# your compose project directory (the same directory as your
# docker-compose.yml), and set database options, application
# name, key, and other settings there.
# A list of available settings is available in .env.example
#
# The services should scale properly across a swarm cluster
# if the volumes are properly shared between cluster members.

services:

## App and Worker
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: pixelfed
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - "app-storage:/var/www/storage"
      - "app-bootstrap:/var/www/bootstrap"
      - "./.env:/var/www/.env"
    networks:
      - external
      - internal
    ports:
        - "9000:9000"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: pixelfed
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - "app-storage:/var/www/storage"
      - "app-bootstrap:/var/www/bootstrap"
    networks:
      - external  # Required for ActivityPub
      - internal
    command: gosu www-data php artisan horizon

## DB and Cache
  redis:
    image: redis:5-alpine
    restart: unless-stopped
    volumes:
      - "redis-data:/data"
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  db:
    restart: unless-stopped
    image: postgres:12-alpine
    networks:
      - internal
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=pixelfed
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

# Adjust your volume data in order to store data where you wish
volumes:
  redis-data:
  postgres-data:
  app-storage:
  app-bootstrap:  

networks:
  internal:
    internal: true
  external:
    driver: bridge
