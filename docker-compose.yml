---
version: '3'
services:

## DB and Cache
  redis:
    image: redis:5-buster
    restart: unless-stopped
    volumes:
      - "./redis:/data"
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  postgres:
    restart: unless-stopped
    image: postgres:12
    networks:
      - internal
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=pixelfed
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    shm_size: 64M

## App and Worker
  nginx:
    image: nginx
    volumes:
    - ./:/var/www
    ports:
    - "8080:8080"
    networks:
      - external
      - internal
    command: /bin/bash -c "envsubst < /var/www/contrib/docker/nginx.conf > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

  phpfpm:
    build:
      context: .
      dockerfile: Dockerfile.fpm
    image: pixelfed
    restart: unless-stopped
    env_file:
      - .env.docker
    volumes:
      - "./storage:/var/www/storage"
      - "./bootstrap:/var/www/bootstrap"
      - "./.env.docker:/var/www/.env"
      - "./contrib/docker/fpm.conf:/usr/local/etc/php-fpm.d/www.conf"
    networks:
      - external
      - internal
    ports:
        - "9000:9000"
    command: php-fpm

  worker:
    build:
      context: .
      dockerfile: Dockerfile.fpm
    image: pixelfed
    restart: unless-stopped
    env_file:
      - .env.docker
    volumes:
      - "./storage:/var/www/storage"
      - "./bootstrap:/var/www/bootstrap"
    networks:
      - external  # Required for ActivityPub
      - internal
    command: gosu www-data php artisan horizon

networks:
  internal:
    internal: true
  external:
    driver: bridge






